import nock from 'nock';
import {jest} from '@jest/globals';
import * as CVEs from './CVE-data-getters';

// these tests are noisy
beforeEach(() => {
  jest.spyOn(console, 'error').mockImplementation(() => {});
});

afterEach(() => {
  jest.resetAllMocks();
});


describe('Show search', () => {

  function searchNock() {
    return nock('http://localhost:8080')
      .defaultReplyHeaders({
        'access-control-allow-origin': '*',
        'access-control-allow-credentials': 'true'
      })
      .get('/cve/search');
  }

  it('given a search term, gets search data json',  async () => {
    searchNock()
      .query({for: 'doctor'})
      .reply(200, [{totalResults: 13}]);

    expect(await CVEs.getCVEs('doctor')).toEqual([{totalResults: 13}]);
  });

  describe('Error cases', () => {
    it('deals with http error cases',  async () => {
      searchNock()
        .query({q: 'doctor'})
        .reply(400);

      await expect(CVEs.getCVEs('doctor'))
        .rejects
        .toThrow('failed to get data');
    });

    it('deals with network error cases',  async () => {
      searchNock()
        .query({q: 'doctor'})
        .replyWithError('something awful happened')

      await expect(CVEs.getCVEs('doctor'))
        .rejects
        .toThrow('failed to get data');
    });
  });
});
